( { x = [ _ ( nil print ( "( { x = " + ( (nil toString x ) + " } in ( _ x _ ) ) " ) ) ) _ ] } in ( _ x _ ) )
( { x = [ _ ( nil print ( "( { x = " + ( (nil toString x ) + " } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
( { x = [ _ ( nil print ( "( { x = " + ( (nil toString x ) + "_ ] } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
( { x = [ _ ( nil print ( "( { x = " + ( (nil toString x ) + "_ ] } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
( { x = [ _ ( nil print ( "( { x = " + ( (nil toString x) + "_ ] } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
( { x = [ _ ( _ print ( "( { x = " + ( (nil toString x) + "_ ] } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
( { x = [ _ ( _ print ( "( { x = " + ( (_ toString x) + "_ ] } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + ((_ toString x) + "_ ] } in ( _ x _ ) ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + ((_ toString x) + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (("" + x) + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in (_ x _) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in (_ x_ ) )
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in x )
({ x = [ _ ( _ print ( "({ x = " + (("" + x) + "_ ] } in x ) " ) ) ) _ ] } in x )
to-string
to_string
toString
(_ toString "hi")
({ x = [ _ ( _ print ( "({ x = " + (x + "_ ] } in x ) " ) ) ) _ ] } in x )
({ x = [_ (_ print ()) _] } in x)
:
map
123
"Hi"
((1 : 10) map [_ (x * 10) x])
((1 : 10) map [_ (x Ãœ 10) x])
((1 : 10) map [_ (x + 1) x])
(1 : 10) map [_ (x + 1) x])
(1 : 10)
(_ print ("hi, " + (_ readString _)))
((_ print ("hi, " + (_ readString _))
((_ print ("hi, " + (_ readString _))
((_ print ("hi, " + (_ readString _))))
((_ print ("hi, " + (_ readString _)))
(_ print (_ readString _))
(_ readString _)
("hi" print _)
(_ readString _)
(_ print "hi")
(1 + (5 * 2))
(1 + 5)
:
map
({ hi = [x (x + y) y] } in (_ print hi))
(1 + 5)
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b], rev = [_ (nil <(list == nil)> ((_ rev (_ snd list)) ++ ((_ fst list) , nil))) list] } in ( _ rev (1 : 10) ))
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b], rev = [_ (nil <(list == nil)> ((_ rev (_ snd list)) ++ ((_ fst list) , nil))) list] } in ( _ rev (1 : 10) ))
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b], rev = [_ (nil <(list == nil)> ((_ rev (_ snd list)) ++ ((_ fst list), nil))) list] } in ( _ rev (1 : 10) ))
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b], rev = [_ (nil <(list == nil)> ((_ rev (_ snd list)) ++ (_ fst list))) list] } in ( _ rev (1 : 10) ))
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b], rev = [_ (nil <(list == nil)> ((_ rev (_ snd list)) , (_ fst list))) list] } in ( _ rev (1 : 10) ))
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b], rev = [_ (nil <(list == nil)> ((_ rev (_ snd list)) , (_ fst list))) list] } in ( (1 : 10) ++ (5 : 10) ))
({ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b] } in ( (1 : 10) ++ (5 : 10) ))
{ ++ = [a (b <(a == nil)> ((_ fst a) , ((_ snd a) ++ b))) b] } in ( (1 : 10) ++ (5 : 10) )
